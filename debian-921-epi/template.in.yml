---

_:
  -
    &shell_provisioner_options
    type: shell
    execute_command: echo '{{user `ssh_password`}}' | {{ .Vars }} sudo -ES '{{ .Path }}'

  -
    &communicator_options
    ssh_password: '{{ user `ssh_password` }}'
    ssh_username: '{{ user `ssh_username` }}'
    ssh_timeout: 2m

  -
    &generic_builder_options
    headless: True
    output_directory: '{{ user `output_directory` }}/{{ user `name` }}'
    shutdown_command: echo '{{ user `ssh_password` }}' | sudo -S poweroff

  -
    &vmware_builder_options
    type: vmware-vmx
    source_path: '{{ user `vmx_source_path` }}'

    vmx_remove_ethernet_interfaces: True

  -
    &virtualbox_builder_options
    type: virtualbox-ovf
    source_path: '{{ user `ovf_source_path` }}'
    import_flags: [ --ostype, Linux_64 ] # won't boot if not used
    vm_name: 'packer-{{ user `vm_name` }}' # avoid timestamp in vm file name
    format: ova

  -
    &vnc_options
    vnc_disable_password: True
    vnc_port_min: '{{ user `vnc_port_min` }}'
    vnc_port_max: '{{ user `vnc_port_max` }}'
  
  -
    &vrdp_options
    vrdp_port_min: '{{ user `vrdp_port_min` }}'
    vrdp_port_max: '{{ user `vrdp_port_max` }}'
  
variables:

  name: _vm_name
  vmx_source_path: _vmx_source_path
  ovf_source_path: _ovf_source_path

  ssh_username: _ssh_username
  ssh_password: _ssh_password

  vnc_port_min: '_vnc_port_min'
  vnc_port_max: '_vnc_port_max'

  vrdp_port_min: '_vrdp_port_min'
  vrdp_port_max: '_vrdp_port_max'

  output_directory: _output_directory
  vm_name: _vm_name
  
builders:
  - name: '{{ user `name` }}-vmware'
    <<: *generic_builder_options
    <<: *vmware_builder_options
    <<: *communicator_options
    <<: *vnc_options
  - name: '{{ user `name` }}'
    <<: *generic_builder_options
    <<: *virtualbox_builder_options
    <<: *communicator_options
    <<: *vrdp_options
    
provisioners:
  - <<: *shell_provisioner_options
    inline:
      - apt -y install open-vm-tools
      - apt -y update && apt-get -y upgrade
      - apt -y install python-pip python-dev
      - pip install ansible
      - echo 'PubkeyAcceptedKeyTypes=+ssh-dss' >> /etc/ssh/sshd_config
  - type: ansible-local
    playbook_file: ansible/users.yml
