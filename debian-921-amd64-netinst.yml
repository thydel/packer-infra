---

_:
  -
    &shell_provisioner_options
    type: shell
    execute_command: echo '{{user `ssh_password`}}' | {{ .Vars }} sudo -ES '{{ .Path }}'
  -
    &boot
    - '<esc><wait>'
    - 'install '
    - 'auto=true '
    - 'url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/{{ user `preseed_file` }} '
    - 'hostname={{ .Name }} '
    - 'domain={{ user `domain` }} '
    - '<enter>'
  -
    &communicator_options
    ssh_password: '{{ user `ssh_password` }}'
    ssh_port: 22
    ssh_username: '{{ user `ssh_username` }}'
    ssh_wait_timeout: 10000s
    
  -
    &vmware_builder_options
    type: vmware-iso
    guest_os_type: debian8-64
    # vm_name: packer-debian-921-amd64-netinst
    vmx_remove_ethernet_interfaces: False
    vmx_data:
      cpuid.coresPerSocket: 1
      ethernet0.pciSlotNumber: 32
      memsize: 1024
      numvcpus: 1
    tools_upload_flavor: linux
  -
    &vnc_options
    vnc_disable_password: True
    vnc_port_min: 5959
    vnc_port_max: 5959
  
variables:

  name: debian-921-amd64-netinst
  domain: ''

  iso_file: debian-9.2.1-amd64-netinst.iso
  iso_remote_path: https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/
  iso_local_path: /data/iso
  iso_checksum_type: sha256
  iso_checksum_url: https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/SHA256SUMS

  http_directory: .
  preseed_file: debian-921-amd64-netinst.preseed

  ssh_username: debian
  ssh_password: packer
  disk_size: '16384'

  output_directory: /data/packer

  language: en
  locale: en_CA.UTF-8
  
builders:
  - <<: *vmware_builder_options
    <<: *communicator_options
    <<: *vnc_options
    name: '{{ user `name` }}'
    boot_command: *boot
    boot_wait: 5s
    disk_size: '{{user `disk_size`}}'
    headless: True
    http_directory: '{{ user `http_directory` }}'
    iso_urls:
      - '{{ user `iso_local_path` }}/{{ user `iso_file` }}'
      - '{{ user `iso_remote_path` }}/{{ user `iso_file` }}'
    iso_checksum_type: '{{ user `iso_checksum_type` }}'
    iso_checksum_url: '{{ user `iso_checksum_url` }}'
    output_directory: '{{ user `output_directory` }}/{{ user `name` }}'
    shutdown_command: echo echo '{{ user `ssh_password` }}' | sudo -ES poweroff

_provisioners:
  - <<: *shell_provisioner_options
    script: scripts/ansible.sh
  - <<: *shell_provisioner_options
    script: scripts/setup.sh
  - type: ansible-local
    playbook_file: ansible/main.yml
    galaxy_file: requirements.yml
  - <<: *shell_provisioner_options
    script: scripts/cleanup.sh
